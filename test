2. (6 marks) Count the number of times each instruction executes to determine the running time and Big-Oh of
the running time for each of the following algorithms (assume the time to execute each individual instruction is 1 time unit):

/* Taking #1 as an example from my notes: */

(a)  Algorithm 1:

  s = 0        (1) assignment
  i = 0        (1)
  while i < n  (n + 1) the operation here is the bool evaluation; it's evaluated n times + 1 (last check before exiting)
      s ++  (n)
      i ++  (n)
      
      n 
      n
      n + 1
          1
          1
     ------
     3n + 3 -> O(n)

(b) Algorithm 2:

  a = a + b       (2)?
  c = d * d * d   (3)?
  e = 0           (1)
  
  2
  3
  1
  ------
  5-> O(1)?

(c)  Algorithm 3:

  if a < b           (1)
      a = a + b         if true then (2)
      c = d * d * d                  (3)
      e = 0                          (1)
  else
      b = 0         (1)
  
  (we take the if portion because it is larger)
  1
  2
  3
  1
  ------
  6-> O(1)?

(d) Algorithm 4:

  s = 0            (1)
  i = 0            (1)
  while i < n      (n + 1)
      j = 0        (n)
      while j < n  (n + 1)(n)
          s ++     (n)(n)
          j ++     (n)(n)
      i ++         (n)
      
      n2 
      n2 
      n2 + n
           n
           n
           n + 1
               1
               1
     ---------
     3n2 + 4n + 3 -> O(n2)

(e)  Algorithm 5:

  s = 0            (1)
  i = 0            (1)
  while i < n      (n + 1)
      j = 0        (n)
      while j <= i (n2/2 + n)
          s ++     (n)(n)
          j ++     (n)(n)
      i ++         (n)

1
1
1 + n
    n
    n
    n + n2/2
        n2
        n2
-----------
3+4n +5n2/2 -> O(n2)


(f)  Algorithm 6:

  s = 0           (1)
  i = 1           (1)
  while i <= n    (n + 1) (log2(i))
      j = 0       (log2(i))
      while j < n (n + 1)(log2(i))
          s ++    (n)(log2(i))
          j ++    (n)(log2(i))
      i = i * 2   (log2(i))
 
 O((n+1)(log2(i))


3. (8 marks) Using the definition of Big-Oh and Big-Omega, show that:

(a)  c1n is Ο(n) and Ω(n).

(b) c2n3 + c3 is Ο(n3) and Ω(n3).

(c)  c4n log n + c5n is Ο(n log n) and Ω(n log n).

(d) c62n + c7n6 is Ο(2n) and Ω(2n).

4. (10 marks) For each of the following pairs of functions, either f(n) is O(g(n)), f(n) is Ω(g(n)), or f(n) = Θ(g(n)). For each pair, determine which relationship is correct. Justify your answer using the method of limits.

(a)  f(n) = log n2; g(n) = log n + 5.

(b) f(n) = sqrt(n); g(n) = log n2.

(c)  f(n) = log2 n; g(n) = log n.

(d) f(n) = n; g(n) = log2 n.

(e)  f(n) = n log n + n; g(n) = log n.

(f)  f(n) = log n2; g(n) = log2 n.

(g) f(n) = 2n; g(n) = 10n2.

(h) f(n) = 2n; g(n) = n log n.

(i)  f(n) = 2n; g(n) = 3n.

(j)  f(n) = 2n; g(n) = nn.
